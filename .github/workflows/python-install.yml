name: Python installer

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main
env:
  GITHUB_ACTION: ON 

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-24.04
            compiler: gcc
            version: 13
          - os: macos-latest
            compiler: gcc
            version: 13
          - os: windows-latest
            compiler: msvc
            version: latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
   
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      uses: ConorMacBride/install-package@v1
      with:
        apt: gcc-13 g++-13 cmake git
    
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      uses: ConorMacBride/install-package@v1
      with:
        brew: gcc@13 cmake git
    
    - name: Setup compiler environment (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "CC=gcc-13" >> $GITHUB_ENV
        echo "CXX=g++-13" >> $GITHUB_ENV
    
    - name: Setup MSVC compiler environment (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    
    - name: Set Windows environment variables
      if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "CC=cl.exe" >> $GITHUB_ENV
        echo "CXX=cl.exe" >> $GITHUB_ENV
    
    - name: Display compiler version (Unix)
      if: runner.os != 'Windows'
      run: $CC --version
    
    - name: Display compiler version (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: cl
    
    - name: Set up and install via .venv (Unix)
      if: runner.os != 'Windows'
      run: |
        python3 -m venv .venv && source .venv/bin/activate
        pip install -vvv git+https://github.com/Fare9/Shuriken-Analyzer.git@main#subdirectory=shuriken/bindings/Python/
        python3 -c "from shuriken import *"
        rm -rf .venv/
    
    - name: Set up and install via .venv (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        python -m venv .venv
        call .venv\Scripts\activate.bat
        pip install -vvv git+https://github.com/Fare9/Shuriken-Analyzer.git@main#subdirectory=shuriken/bindings/Python/
        python -c "from shuriken import *"
        rmdir /s /q .venv

    - name: Set up and install via --user (Unix)
      if: runner.os != 'Windows'
      run: |
        pip install --user -vvv git+https://github.com/Fare9/Shuriken-Analyzer.git@main#subdirectory=shuriken/bindings/Python/
        python3 -c "import os; from pathlib import Path; assert (Path.home() / '.local').exists(), 'User installation directory not found'"
        python3 -c "from shuriken import *"
    
    - name: Set up and install via --user (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        pip install --user -vvv git+https://github.com/Fare9/Shuriken-Analyzer.git@main#subdirectory=shuriken/bindings/Python/
        python -c "import os; from pathlib import Path; assert (Path.home() / 'AppData' / 'Roaming' / 'Python').exists(), 'User installation directory not found'"
        python -c "from shuriken import *"